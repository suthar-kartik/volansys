# Stage that builds the application, a prerequisite for the running stage
FROM maven:3-openjdk-11-slim as build

# Stop running as root at this point
RUN useradd -m ubuntu
WORKDIR /home/ubuntu/task
RUN chown ubuntu:ubuntu /home/ubuntu/task
USER ubuntu

# Copy pom.xml and prefetch dependencies so a repeated build can continue from the next step with existing dependencies
COPY --chown=ubuntu pom.xml ./
RUN mvn dependency:go-offline -Pproduction

# Copy all needed project files to a folder
COPY --chown=ubuntu:ubuntu src src
COPY --chown=ubuntu:ubuntu frontend frontend
COPY --chown=ubuntu:ubuntu package.json ./

# Using * after the files that are autogenerated so that so build won't fail if they are not yet created
COPY --chown=ubuntu:ubuntu package-lock.json* pnpm-lock.yaml* webpack.config.js* vite.config.js* ./

# Build the production package, assuming that we validated the version before so no need for running tests again
RUN mvn clean package -DskipTests -Pproduction

# Running stage: the part that is used for running the application
FROM openjdk:11-slim as build
COPY --from=build /home/ubuntu/task/target/*.war /home/ubuntu/app/app.war
RUN useradd -m ubuntu
USER ubuntu
EXPOSE 8080
CMD java -jar /usr/app/app.war
# Stop running as root at this point
RUN useradd -m ubuntu
WORKDIR /home/ubuntu/project
RUN chown ubuntu:ubuntu /home/ubuntu/project
USER ubuntu

# Copy pom.xml and prefetch dependencies so a repeated build can continue from the next step with existing dependencies
COPY --chown=ubuntu pom.xml ./
RUN mvn dependency:go-offline -Pproduction

# Copy all needed project files to a folder
COPY --chown=ubuntu:ubuntu src src
COPY --chown=ubuntu:ubuntu frontend frontend
COPY --chown=ubuntu:ubuntu package.json ./

# Using * after the files that are autogenerated so that so build won't fail if they are not yet created
COPY --chown=ubuntu:ubuntu package-lock.json* pnpm-lock.yaml* webpack.config.js* vite.config.js* ./

# Build the production package, assuming that we validated the version before so no need for running tests again
RUN mvn clean package -DskipTests -Pproduction

# Running stage: the part that is used for running the application
FROM openjdk:8
COPY --from=build /home/ubuntu/project/target/*.war /home/ubuntu/app/app.war
RUN useradd -m ubuntu
USER ubuntu
EXPOSE 8080
CMD java -jar /usr/app/app.war
